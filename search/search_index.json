{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Fontus Discover your water quality data! The Piper plot is a standard visualization technique for the major ion composition of water analyses. Unfortunately, Piper diagrams cannot be constructed using standard graphics tools or libraries and therefore require specialized software. Fontus is an intuitive, easy-to-use open-source web application that allows you to create beautiful Piper plots for free. Upload your water quality data with a simple drag and drop and start analyzing your data. Disover this App using the demo dataset or visit the quickstart page of this documentation.","title":"Home"},{"location":"#fontus","text":"","title":"Fontus"},{"location":"#discover-your-water-quality-data","text":"The Piper plot is a standard visualization technique for the major ion composition of water analyses. Unfortunately, Piper diagrams cannot be constructed using standard graphics tools or libraries and therefore require specialized software. Fontus is an intuitive, easy-to-use open-source web application that allows you to create beautiful Piper plots for free. Upload your water quality data with a simple drag and drop and start analyzing your data. Disover this App using the demo dataset or visit the quickstart page of this documentation.","title":"Discover your water quality data!"},{"location":"about/","text":"About Fontus Fontus is written in Python and uses the framework Streamlit and the graphics library Bokeh . The data file used in the tutorial originates from the sample data of WQChartPy , an open-source Python package for producing most of the graphical diagrams for the visualization of water geochemistry data. As a Python package, WQChartPy requires some Python programming knowledge, whereas Fontus is an application. All Fontus code is available on github and can be reused under the specified license. Fontus will be extended with additional diagrams and analysis methods in future versions.","title":"About Fontus"},{"location":"about/#about-fontus","text":"Fontus is written in Python and uses the framework Streamlit and the graphics library Bokeh . The data file used in the tutorial originates from the sample data of WQChartPy , an open-source Python package for producing most of the graphical diagrams for the visualization of water geochemistry data. As a Python package, WQChartPy requires some Python programming knowledge, whereas Fontus is an application. All Fontus code is available on github and can be reused under the specified license. Fontus will be extended with additional diagrams and analysis methods in future versions.","title":"About Fontus"},{"location":"load_data/","text":"Load Data This tab includes the import settings By default the demo dataset and its configuration is loaded. If you want to explore the basic features of this application using the demo dataset, no further action should be required in this section. The Data radio-button allows to set the datasource to an imported file. Once the Upload dataset option is selected, various import options and an upload fields become available. Field Description Separator character character separating 2 fields Encoding file encoding Upload csv file drag the file from your local disk to this field to upload the file The Preview Data section shows the uploaded data. Use the Download data as CSV button below this table to download the file. Typically, this is not useful since the table corresponds to the user's uploaded file. However, downloading the file may be helpful if the user wishes to download the demo dataset so he can reuse the file as a template for formatting data. For the current version, it is essential to use the naming convention for your fields for major ions, as shown below: Parameter Description Ca Calcium concentration in mg/L Mg Magnesium concentration in mg/L Na Sodium concentration in mg/L (K) Potassium in mg/L is not mandatory, but if present, it will be added to the sodium ternary endpoint in the Piper diagram Cl Chloride concentration in mg/L SO4 Sulfate concentration in mg/L HCO3 or Alk Bicarbonate concentration in mg/L or alternatively alkalinity in mg/L CaCO3 (CO3) Carbonate concentration in mg/L is not mandatory, but if found, it will be added to the bicarbonate ternary endpoint. The Fields section shows all fields found in the uploaded data and the default settings, that the system determines after the import. You can redefine the following columns. Column name : The column name is the name found in the imported file, it cannot be changed, unless the user updates the column name in the file and uploads it again. Column names must be unique and should not include spaces, brackets, hyphens etc. Label : Label used in the plots and tooltips. Labels will be more useful in future versions. The Piper plots use fixed labels to label the ternary endpoints. Digits : Default number of digits for numeric parameters when shown in a tooltip. Map: Columns may be mapped to system parameters, so the application understands the significance of the data held in this column. Currently, the following system parameters can be mapped: latitude, longitude, sample_date, ca, mg, k, cl, so4, hco3, co3, alk. Note that if you use these as your column names in the uploaded file, the system will automatically detect and map the parameters. Type: Data type for this column: str, float, int, DateTime. String parameters will be detected as group-by-parameters. Group-by-parameters are included in the GUI and can be used for filtering, for plot lgends and plot grouping. The Generate time aggregation columns only appear if a parameter is mapped as the sample_date parameter. If this is the case, you may add one or multiple time aggregation columns: Year , Month , Season . These fields can later be used for filtering or as the legend in a Piper plot. The application uses a simplified algorithm where December to February is assigned to Winter, March to May to spring, June to August to summer, and September to November to fall. Note that for determining the season based on the sampling date, you should define the hemisphere of the project area. For the Southern hemisphere, the seasons will be assigned as follows: December to February: summer; March to May: fall, June to August: winter, September to November: fall. Refrain from using this option if your uploaded data already includes the year, month, or season columns. Note that your data is not stored on the server. You will have to upload and configure your data for each new session.","title":"Load Data"},{"location":"load_data/#load-data","text":"This tab includes the import settings By default the demo dataset and its configuration is loaded. If you want to explore the basic features of this application using the demo dataset, no further action should be required in this section. The Data radio-button allows to set the datasource to an imported file. Once the Upload dataset option is selected, various import options and an upload fields become available. Field Description Separator character character separating 2 fields Encoding file encoding Upload csv file drag the file from your local disk to this field to upload the file The Preview Data section shows the uploaded data. Use the Download data as CSV button below this table to download the file. Typically, this is not useful since the table corresponds to the user's uploaded file. However, downloading the file may be helpful if the user wishes to download the demo dataset so he can reuse the file as a template for formatting data. For the current version, it is essential to use the naming convention for your fields for major ions, as shown below: Parameter Description Ca Calcium concentration in mg/L Mg Magnesium concentration in mg/L Na Sodium concentration in mg/L (K) Potassium in mg/L is not mandatory, but if present, it will be added to the sodium ternary endpoint in the Piper diagram Cl Chloride concentration in mg/L SO4 Sulfate concentration in mg/L HCO3 or Alk Bicarbonate concentration in mg/L or alternatively alkalinity in mg/L CaCO3 (CO3) Carbonate concentration in mg/L is not mandatory, but if found, it will be added to the bicarbonate ternary endpoint. The Fields section shows all fields found in the uploaded data and the default settings, that the system determines after the import. You can redefine the following columns. Column name : The column name is the name found in the imported file, it cannot be changed, unless the user updates the column name in the file and uploads it again. Column names must be unique and should not include spaces, brackets, hyphens etc. Label : Label used in the plots and tooltips. Labels will be more useful in future versions. The Piper plots use fixed labels to label the ternary endpoints. Digits : Default number of digits for numeric parameters when shown in a tooltip. Map: Columns may be mapped to system parameters, so the application understands the significance of the data held in this column. Currently, the following system parameters can be mapped: latitude, longitude, sample_date, ca, mg, k, cl, so4, hco3, co3, alk. Note that if you use these as your column names in the uploaded file, the system will automatically detect and map the parameters. Type: Data type for this column: str, float, int, DateTime. String parameters will be detected as group-by-parameters. Group-by-parameters are included in the GUI and can be used for filtering, for plot lgends and plot grouping. The Generate time aggregation columns only appear if a parameter is mapped as the sample_date parameter. If this is the case, you may add one or multiple time aggregation columns: Year , Month , Season . These fields can later be used for filtering or as the legend in a Piper plot. The application uses a simplified algorithm where December to February is assigned to Winter, March to May to spring, June to August to summer, and September to November to fall. Note that for determining the season based on the sampling date, you should define the hemisphere of the project area. For the Southern hemisphere, the seasons will be assigned as follows: December to February: summer; March to May: fall, June to August: winter, September to November: fall. Refrain from using this option if your uploaded data already includes the year, month, or season columns. Note that your data is not stored on the server. You will have to upload and configure your data for each new session.","title":"Load Data"},{"location":"plot_settings/","text":"Plot Settings This tab allows overwriting the automatically generated plot settings for the Piper diagram. The form is divided into two major sections: the more general plot settings and the marker settings. Plot Properties In the plot properties sections, you may define the following parameters: Plot Title: Allows setting a title for the plot. If no title is required, the fields can be left empty. For grouped plots, the user may include the group-legend-by -parameter-name in curly braces. For each plot, this expression will be replaced by the code for which the plot uses the data. | Plot Title Font Size: Size of title font in em. Plot Title Alignment: Define whether the title should be left-, center- or right-aligned. Group plots by: If your data contains strings or integer values with a limited number of distinct values, you may group the plots by such a field (e.g., station, geology, year, etc.). One plot will be created for each distinct value in the selected data column. Group Legend by: Define the field that would be used to appear in the legend with distinct markers. For example, if you select the station column in the demo dataset, each station will be represented with a distinct marker. Plot Width: Width of plot in points. Show Grid: Show or hide the grid lines. Grid lines can be hidden if the target diagram is small. | Show Tick Labels: Show or hide the tick labels. Tick labels may be hidden if the target diagram is small. Tick Label Font Size: Select a larger font in points if the diagram needs to be scaled down. Axis Label Font Size: Select a larger font in points if the diagram needs to be scaled down. Image Output Format Select png for a bitmap format and SVG for a vectorized output. The SVG format is scaleable but is not as widely supported as the png format. Note that plot by and legend by grouping can be used in combination, but different fields should be applied to each grouping. When using the same group field, each plot will contain only one marker. Marker Properties Markers are defined by the basic properties of type (circle, square, triangle, etc.), color, and size. Marker Size: size of the marker in points. All markers have the same size. Marker Color Palette: : Colors are assigned to markers through color palettes containing a list of colors. Fontus uses the palettes of the Bokeh graphic library, used to render the Piper diagram. After selecting a palette, the selected palette is previewed below the selectbox. Number of Colors: : Most palettes include 11 or more colors. If marker colors are generated by cycling through the palette, fewer colors may be more convenient. The field Number of Colors can be used to limit the number of colors used from the defined palette. Default Color: If the user does not select a Group Legend By option, all data points are rendered using the same marker. Fontus uses the first marker type for the used symbol and the Default Color for the color of the default marker. Marker Generator Algorithm: : When selecting the Group Legend By option, markers are generated automatically by alternating the symbol and/or colors of each marker. The user may choose between three generators: - Cycle through marker types (circle, square, etc.) first using the first color of the palette. When the last symbol type is reached, use the next color and restart from the first marker type. - Cycle through color type first using the first marker type of the marker-type list. When the last color is reached, use the next marker type and restart from the first color. - Cycle through color and marker types simultaneously. The number of marker types and colors should be equal. Make sure, for this mode, that there are no more codes to be represented than color/marker types available, as otherwise, there will be identical markers for different codes. Tooltips When hovering over points on the plot, a tooltip will show information about the selected point. In this section, the user can define which fields to display in the tooltip box. For major ions, the user can specify whether values should be listed as mg/L (original concentration from the data file), meq/L, or meq%. Values expressed in meq% are smaller than mg/L-concentrations. Therefore the user may also specify the number of digits used for major ions concentrations.","title":"Plot Settings"},{"location":"plot_settings/#plot-settings","text":"This tab allows overwriting the automatically generated plot settings for the Piper diagram. The form is divided into two major sections: the more general plot settings and the marker settings.","title":"Plot Settings"},{"location":"plot_settings/#plot-properties","text":"In the plot properties sections, you may define the following parameters: Plot Title: Allows setting a title for the plot. If no title is required, the fields can be left empty. For grouped plots, the user may include the group-legend-by -parameter-name in curly braces. For each plot, this expression will be replaced by the code for which the plot uses the data. | Plot Title Font Size: Size of title font in em. Plot Title Alignment: Define whether the title should be left-, center- or right-aligned. Group plots by: If your data contains strings or integer values with a limited number of distinct values, you may group the plots by such a field (e.g., station, geology, year, etc.). One plot will be created for each distinct value in the selected data column. Group Legend by: Define the field that would be used to appear in the legend with distinct markers. For example, if you select the station column in the demo dataset, each station will be represented with a distinct marker. Plot Width: Width of plot in points. Show Grid: Show or hide the grid lines. Grid lines can be hidden if the target diagram is small. | Show Tick Labels: Show or hide the tick labels. Tick labels may be hidden if the target diagram is small. Tick Label Font Size: Select a larger font in points if the diagram needs to be scaled down. Axis Label Font Size: Select a larger font in points if the diagram needs to be scaled down. Image Output Format Select png for a bitmap format and SVG for a vectorized output. The SVG format is scaleable but is not as widely supported as the png format. Note that plot by and legend by grouping can be used in combination, but different fields should be applied to each grouping. When using the same group field, each plot will contain only one marker.","title":"Plot Properties"},{"location":"plot_settings/#marker-properties","text":"Markers are defined by the basic properties of type (circle, square, triangle, etc.), color, and size. Marker Size: size of the marker in points. All markers have the same size. Marker Color Palette: : Colors are assigned to markers through color palettes containing a list of colors. Fontus uses the palettes of the Bokeh graphic library, used to render the Piper diagram. After selecting a palette, the selected palette is previewed below the selectbox. Number of Colors: : Most palettes include 11 or more colors. If marker colors are generated by cycling through the palette, fewer colors may be more convenient. The field Number of Colors can be used to limit the number of colors used from the defined palette. Default Color: If the user does not select a Group Legend By option, all data points are rendered using the same marker. Fontus uses the first marker type for the used symbol and the Default Color for the color of the default marker. Marker Generator Algorithm: : When selecting the Group Legend By option, markers are generated automatically by alternating the symbol and/or colors of each marker. The user may choose between three generators: - Cycle through marker types (circle, square, etc.) first using the first color of the palette. When the last symbol type is reached, use the next color and restart from the first marker type. - Cycle through color type first using the first marker type of the marker-type list. When the last color is reached, use the next marker type and restart from the first color. - Cycle through color and marker types simultaneously. The number of marker types and colors should be equal. Make sure, for this mode, that there are no more codes to be represented than color/marker types available, as otherwise, there will be identical markers for different codes.","title":"Marker Properties"},{"location":"plot_settings/#tooltips","text":"When hovering over points on the plot, a tooltip will show information about the selected point. In this section, the user can define which fields to display in the tooltip box. For major ions, the user can specify whether values should be listed as mg/L (original concentration from the data file), meq/L, or meq%. Values expressed in meq% are smaller than mg/L-concentrations. Therefore the user may also specify the number of digits used for major ions concentrations.","title":"Tooltips"},{"location":"quick_start/","text":"Quick Start Exploring the demo dataset The demo dataset includes 54 samples from the groundwater monitoring network of Basel (Switzerland). The raw data can be found on the city's Opendata portal . Inspecting the table and fields in the Load Data section, you will note that the dataset includes a station-name, coordinates, sampling date and the major ions calcium magnesium, sodium, potassium, chloride, sulfate, bicarbonate, and carbonate. The data table has basic interactivity features: By hovering over the header cells, you can change the column width, and clicking on a header cell allows you to sort the table ascending and descending according to the values in this column. If you wish to inspect the data with your local editor or spreadsheet software, you can download the table by clicking the Download data as CSV button. To get an impression of the Piper diagram using the initial settings, navigate to the Show Plot section and press the Plot button above the Documentation link in the sidebar. You will see the following output: Hovering over the markers in the plot will display a tooltip with the values for this sample. This technique becomes difficult for markers, which are closely grouped or overlapping. In this case, the zoom tool becomes handy: Activate the icon in the toolbar to the right of the plot, then zoom into a section with overlapping symbols. In the resulting blow-up plot it is easy to select a single marker to verify the respective composition. To restore the original setting, press on the icon in the plots toolbox. Group by Plot Option To inspect analyses from a single station one by one, proceed as follows: In the filter box in the sidebar, select one or several stations. Then press plot again to display the diagram based on the filtered data. If you wish to inspect every single station, you should use the Group plot by option from the Plot settings tab. Select a station from the list of available group-by-fields to generate a separate plot for each expression found in the station. There are two ways of assigning text to each diagram showing which station is represented. Use the title option and include the group-by-field within curly brackets. After pressing the Plot button again, each plot will now include a title with the station name. Ultimately you will want to save your plot to a file so you can include it in your report. In the plot settings, you can choose the output format. PNG files are a common bitmap format and can be included in most documents. The png format has its limitations when scaling up. The SVG format is a vectorized format and therefore does have the mentioned scaling limitations. However, it is not as widely importable in all graphics text processing software as the PNG format. Sometimes, SVG files are not completely rendered when imported. After choosing your preferred format, you have to select the save images option in the settings box of the sidebar. With this option active, Fontus generates an image file for each rendered plot. You can download the images of the last run using the Download Image button in the sidebar. The file is downloaded to your download folder and can be retrieved from there. If you have generated multiple plots by using the group plot by function, all imaged files will be summarized in a single zip file. Use of Markers Markers are commonly divided into different groups by applying different colors, sizes, and shapes. Use the Group legend by option to define which field will be used. Station, aquifer, sampling event, year, or season are typical candidates. In our demo dataset, there is only a single field available for grouping, the station field. However, Fontus allows the calculation of various time aggregation fields based on the sample_date field. In the Load Data tab, check the checkboxes Year column, Month column, and Season column. This will generate the respective columns and add them to the imported data, and these fields become available for grouping or filtering the same way as the imported data does. For example by selecting the year field in the Group Legend by selectbox and also using {year} as the plot title, one plot per year with available data will be rendered. To show different symbols for each year, set the Group legend by option to year. You may also define the markers. Fontus allows you to define a list of marker types as well as a color palette and the number of colors from this palette. There are three ways to automatically generate symbols. - Option 1 will cycle through symbol types first, then through the colors. Therefore the first marker will be a blue square, a blue circle, then a light blue square and a light blue circle, and so on until there are no new codes for which markers must be generated. The result is shown below. - Option 2 will cycle through colors first while holding the symbol constant. Once all colors have been used, the second marker type will be used, etc. - Option 3 moves through symbols and colors simultaneously. Make sure that you have defined the same number of colors and symbols. This option is useful if you know the number of markers needed and this number is not larger than the list of defined symbol types and colors, as once markers have cycled through all colors, the same combination of type and color will be generated again. Upload your own Data This chapter explains the steps for uploading and exploring your own dataset, which is the standard way of using this software once you know your way around. The current example uses a dataset from Liu et al and can be downloaded directly from https://lcalmbach.github.io/fontus-help/data/data_Liu_et_al_2021.csv, or from its original location https://github.com/jyangfsu/WQChartPy/blob/main/data/data_Liu_et_al_2021.csv. Store the file locally on your disk. Navigate to the Load Data tab. Set the Upload Data radio button to upload the dataset. Set the Separator Character to comma (,). Drag and drop the saved data file on the Upload CSV file field. In the fields section, you may notice that a number of fields were detected as string-type fields and therefore assigned as group-fields . This does not have any impact on calculations, but it may unnecessarily overload the filter section. Only the fields id and shortid have a limited number of distinct values and therefore are good candidates for group-by fields. All other string fields (X, Y, Sy, Sm) may be set to the Map the type as None . Also note that in the bottom section, you can select the default carbonate parameter. In natural water HCO 3 - + CO 3 -- and Alkalinity should be very similar since Alkalinity is equal to: HCO 3 - + CO 3 -- + OH - and some other species, present in very small concentrations in ambient water. Alkalinity should be expressed in mg/L as CaCO 3 . Set the Plot legend by parameter to shortid Navigate to the Show Plot tab and press the Plot button in the sidebar. The following plot should show in the main window: This concludes the quickstart tutorial.","title":"Quick Start"},{"location":"quick_start/#quick-start","text":"","title":"Quick Start"},{"location":"quick_start/#exploring-the-demo-dataset","text":"The demo dataset includes 54 samples from the groundwater monitoring network of Basel (Switzerland). The raw data can be found on the city's Opendata portal . Inspecting the table and fields in the Load Data section, you will note that the dataset includes a station-name, coordinates, sampling date and the major ions calcium magnesium, sodium, potassium, chloride, sulfate, bicarbonate, and carbonate. The data table has basic interactivity features: By hovering over the header cells, you can change the column width, and clicking on a header cell allows you to sort the table ascending and descending according to the values in this column. If you wish to inspect the data with your local editor or spreadsheet software, you can download the table by clicking the Download data as CSV button. To get an impression of the Piper diagram using the initial settings, navigate to the Show Plot section and press the Plot button above the Documentation link in the sidebar. You will see the following output: Hovering over the markers in the plot will display a tooltip with the values for this sample. This technique becomes difficult for markers, which are closely grouped or overlapping. In this case, the zoom tool becomes handy: Activate the icon in the toolbar to the right of the plot, then zoom into a section with overlapping symbols. In the resulting blow-up plot it is easy to select a single marker to verify the respective composition. To restore the original setting, press on the icon in the plots toolbox.","title":"Exploring the demo dataset"},{"location":"quick_start/#group-by-plot-option","text":"To inspect analyses from a single station one by one, proceed as follows: In the filter box in the sidebar, select one or several stations. Then press plot again to display the diagram based on the filtered data. If you wish to inspect every single station, you should use the Group plot by option from the Plot settings tab. Select a station from the list of available group-by-fields to generate a separate plot for each expression found in the station. There are two ways of assigning text to each diagram showing which station is represented. Use the title option and include the group-by-field within curly brackets. After pressing the Plot button again, each plot will now include a title with the station name. Ultimately you will want to save your plot to a file so you can include it in your report. In the plot settings, you can choose the output format. PNG files are a common bitmap format and can be included in most documents. The png format has its limitations when scaling up. The SVG format is a vectorized format and therefore does have the mentioned scaling limitations. However, it is not as widely importable in all graphics text processing software as the PNG format. Sometimes, SVG files are not completely rendered when imported. After choosing your preferred format, you have to select the save images option in the settings box of the sidebar. With this option active, Fontus generates an image file for each rendered plot. You can download the images of the last run using the Download Image button in the sidebar. The file is downloaded to your download folder and can be retrieved from there. If you have generated multiple plots by using the group plot by function, all imaged files will be summarized in a single zip file.","title":"Group by Plot Option"},{"location":"quick_start/#use-of-markers","text":"Markers are commonly divided into different groups by applying different colors, sizes, and shapes. Use the Group legend by option to define which field will be used. Station, aquifer, sampling event, year, or season are typical candidates. In our demo dataset, there is only a single field available for grouping, the station field. However, Fontus allows the calculation of various time aggregation fields based on the sample_date field. In the Load Data tab, check the checkboxes Year column, Month column, and Season column. This will generate the respective columns and add them to the imported data, and these fields become available for grouping or filtering the same way as the imported data does. For example by selecting the year field in the Group Legend by selectbox and also using {year} as the plot title, one plot per year with available data will be rendered. To show different symbols for each year, set the Group legend by option to year. You may also define the markers. Fontus allows you to define a list of marker types as well as a color palette and the number of colors from this palette. There are three ways to automatically generate symbols. - Option 1 will cycle through symbol types first, then through the colors. Therefore the first marker will be a blue square, a blue circle, then a light blue square and a light blue circle, and so on until there are no new codes for which markers must be generated. The result is shown below. - Option 2 will cycle through colors first while holding the symbol constant. Once all colors have been used, the second marker type will be used, etc. - Option 3 moves through symbols and colors simultaneously. Make sure that you have defined the same number of colors and symbols. This option is useful if you know the number of markers needed and this number is not larger than the list of defined symbol types and colors, as once markers have cycled through all colors, the same combination of type and color will be generated again.","title":"Use of Markers"},{"location":"quick_start/#upload-your-own-data","text":"This chapter explains the steps for uploading and exploring your own dataset, which is the standard way of using this software once you know your way around. The current example uses a dataset from Liu et al and can be downloaded directly from https://lcalmbach.github.io/fontus-help/data/data_Liu_et_al_2021.csv, or from its original location https://github.com/jyangfsu/WQChartPy/blob/main/data/data_Liu_et_al_2021.csv. Store the file locally on your disk. Navigate to the Load Data tab. Set the Upload Data radio button to upload the dataset. Set the Separator Character to comma (,). Drag and drop the saved data file on the Upload CSV file field. In the fields section, you may notice that a number of fields were detected as string-type fields and therefore assigned as group-fields . This does not have any impact on calculations, but it may unnecessarily overload the filter section. Only the fields id and shortid have a limited number of distinct values and therefore are good candidates for group-by fields. All other string fields (X, Y, Sy, Sm) may be set to the Map the type as None . Also note that in the bottom section, you can select the default carbonate parameter. In natural water HCO 3 - + CO 3 -- and Alkalinity should be very similar since Alkalinity is equal to: HCO 3 - + CO 3 -- + OH - and some other species, present in very small concentrations in ambient water. Alkalinity should be expressed in mg/L as CaCO 3 . Set the Plot legend by parameter to shortid Navigate to the Show Plot tab and press the Plot button in the sidebar. The following plot should show in the main window: This concludes the quickstart tutorial.","title":"Upload your own Data"},{"location":"show_plot/","text":"Show Plot The plot is rerendered after each change in the data or plot settings. The plot view contains the following elements: 1) Filters: Each field marked as group-by in the Data Load section appears as a multi-select box widget in the sidebar. When selecting one or several codes from the list, the data for the plot will be reduced to samples matching this code. 2) Diagram: The diagram in this box is interactive; when clicking on markers, the corresponding values will be shown in a tooltip box. In order to define which values from the dataset are shown in the toolbox, use the tooltip section in the Plot Settings . 3) Bokeh toolbox The Toolbox allows controlling the user interactions with the diagram: Option Description Allows to pan the plot, for example, to center a cloud of points that you would like to zoom Allows to zoom into a rectangular area of the plot Allows to zoom the center of the plot with your mouse wheel Allows to save a plot to a file Undoes pan and zoom actions Shows the bokeh help on this toolbox Enables and disables showing the tooltip when hovering over a point 4) Data: Click on the icon expands the data area to show a table with data used in the plot. This table includes the calculated meq/L and meq% columns. If filters are used, only the filtered data is shown. 5) \u2699\ufe0fSettings: The settings box in the sidebar holds settings that influence rendering speed: Save Images: When active, each rendered image is written to a file and can be downloaded. A button appears below the Settings box. When pressed, all plots on the screen will be downloaded to your download folder. If the plot-group-by option is active, all plots will be zipped in a single zip file and downloaded. Show Data This toggles the visibility of the plot data. If the user is not currently interested in inspecting the plot data, hiding the table may speed up the plot updates. Auto Render Plots: When Auto Render is active, any change to a setting will trigger the rerendering of the plot or plots. Depending on the number of plots and data points, this may slow the process unnecessarily, and you prefer to first define all settings, then launch the rendering of the plot interactively by pressing the button. This button is only visible if the Auto-Render option is disabled.","title":"Show Plot"},{"location":"show_plot/#show-plot","text":"The plot is rerendered after each change in the data or plot settings. The plot view contains the following elements: 1) Filters: Each field marked as group-by in the Data Load section appears as a multi-select box widget in the sidebar. When selecting one or several codes from the list, the data for the plot will be reduced to samples matching this code. 2) Diagram: The diagram in this box is interactive; when clicking on markers, the corresponding values will be shown in a tooltip box. In order to define which values from the dataset are shown in the toolbox, use the tooltip section in the Plot Settings . 3) Bokeh toolbox The Toolbox allows controlling the user interactions with the diagram: Option Description Allows to pan the plot, for example, to center a cloud of points that you would like to zoom Allows to zoom into a rectangular area of the plot Allows to zoom the center of the plot with your mouse wheel Allows to save a plot to a file Undoes pan and zoom actions Shows the bokeh help on this toolbox Enables and disables showing the tooltip when hovering over a point 4) Data: Click on the icon expands the data area to show a table with data used in the plot. This table includes the calculated meq/L and meq% columns. If filters are used, only the filtered data is shown. 5) \u2699\ufe0fSettings: The settings box in the sidebar holds settings that influence rendering speed: Save Images: When active, each rendered image is written to a file and can be downloaded. A button appears below the Settings box. When pressed, all plots on the screen will be downloaded to your download folder. If the plot-group-by option is active, all plots will be zipped in a single zip file and downloaded. Show Data This toggles the visibility of the plot data. If the user is not currently interested in inspecting the plot data, hiding the table may speed up the plot updates. Auto Render Plots: When Auto Render is active, any change to a setting will trigger the rerendering of the plot or plots. Depending on the number of plots and data points, this may slow the process unnecessarily, and you prefer to first define all settings, then launch the rendering of the plot interactively by pressing the button. This button is only visible if the Auto-Render option is disabled.","title":"Show Plot"},{"location":"version_history/","text":"Version History 0.0.3 (2022-12-31) Intial release","title":"Version history"},{"location":"version_history/#version-history","text":"","title":"Version History"},{"location":"version_history/#003-2022-12-31","text":"Intial release","title":"0.0.3 (2022-12-31)"}]}